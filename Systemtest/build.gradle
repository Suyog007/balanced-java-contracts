/*
 * Copyright (c) 2022 Balanced.network.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import network.balanced.score.dependencies.Dependencies

version = '0.1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

optimizedJar.enabled = false

dependencies {
    compileOnly Dependencies.javaeeApi
    implementation project(':score-lib')

    annotationProcessor Dependencies.javaeeScoreClient
    compileOnly Dependencies.javaeeScoreClient  

    implementation Dependencies.javaeeScorex

    intTestImplementation Dependencies.javaeeUnitTest
    intTestImplementation Dependencies.junitJupiter
    intTestImplementation Dependencies.junitJupiterEngine
    intTestImplementation Dependencies.mockitoCore
    intTestImplementation project(':test-lib')
    intTestImplementation 'org.mockito:mockito-inline:2.13.0'

    intTestImplementation project(':score-client')
    intTestImplementation Dependencies.minimalJson
    intTestAnnotationProcessor Dependencies.javaeeScoreClient
    intTestImplementation Dependencies.iconSdk
    intTestImplementation Dependencies.jacksonDatabind
}

task integrationTest(type: Test) {
    useJUnitPlatform()

    rootProject.allprojects {
        if(it.getTasks().findByName('optimizedJar')) {
            dependsOn(it.getTasks().getByName('optimizedJar'))
        }
    }

    options {
        testLogging.showStandardStreams = true
        description = 'Runs integration tests.'
        group = 'verification'

        testClassesDirs = sourceSets.intTest.output.classesDirs
        classpath = sourceSets.intTest.runtimeClasspath

        systemProperty "rewardsPython", new File(project(':test-lib').projectDir, 'python-contracts/rewards.zip')
        systemProperty "dexPython", new File(project(':test-lib').projectDir, 'python-contracts/dex.zip')
        systemProperty "loansPython", new File(project(':test-lib').projectDir, 'python-contracts/loans.zip')
        systemProperty "dividendsPython", new File(project(':test-lib').projectDir, 'python-contracts/dividends.zip')
        
    }

}