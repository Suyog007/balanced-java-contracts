/*
 * Copyright (c) 2022-2022 Balanced.network.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import network.balanced.score.dependencies.*

version = '0.1.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
        java {
            srcDirs("src/intTest")
        }
    }
}

// for integration tests
configurations {
    intTestImplementation.extendsFrom testImplementation
    intTestAnnotationProcessor.extendsFrom testAnnotationProcessor
    intTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    compileOnly Dependencies.javaeeApi

    implementation Dependencies.javaeeTokens
    implementation Dependencies.javaeeScorex
    implementation Dependencies.minimalJson
    implementation project(':score-lib')

    testImplementation Dependencies.javaeeUnitTest
    testImplementation Dependencies.mockitoCore
    testImplementation Dependencies.mockitoInline


    testImplementation project(':test-lib')
    testImplementation Dependencies.junitJupiter
    testRuntimeOnly Dependencies.junitJupiterEngine

    intTestImplementation Dependencies.javaeeScoreClient
    intTestAnnotationProcessor Dependencies.javaeeScoreClient
    intTestImplementation Dependencies.iconSdk
    intTestImplementation Dependencies.jacksonDatabind

}

optimizedJar {
    mainClassName = 'network.balanced.score.core.dex.DexImpl'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}
    }
    enableDebug = false
}

deployJar {
    endpoints {
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
            nid = 0x53
        }
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
        mainnet {
            uri = 'https://ctz.solidwallet.io/api/v3'
            nid = 0x1
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {}
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

task integrationTest(type: Test, dependsOn: optimizedJar) {
    useJUnitPlatform()
    options {
        testLogging.showStandardStreams = true
        description = 'Runs integration tests.'
        group = 'verification'
        testClassesDirs = sourceSets.intTest.output.classesDirs
        classpath = sourceSets.intTest.runtimeClasspath
        /*systemProperty 'address', "cx06cc605a70b03982a31d6dd9451a73193cebc951"
        systemProperty 'governanceAddress', "cxa24fbd23a2452cf83393cfd1f602109ca6f16596"
        systemProperty 'stakingAddress', "cx8e86ef3b2e2fa33e3580c3a5092c390bfdbfe5bc"
        systemProperty 'sIcxAddress', "cxc85179bc51f0d5ca9cab6ce7dbb920ce7cb3aa76"
        systemProperty 'dividendAddress', "cx457606d270f785e9873bc8ee1a2b9b329885202e"
        */systemProperty 'Dex', project.tasks.optimizedJar.outputJarName
        project.extensions.deployJar.arguments.each {
            arg -> systemProperty arg.name, arg.value
        }

    }

}